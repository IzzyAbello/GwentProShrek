effect
{
	Name: "ReturnToDeck",
	Action: (targets, context) =>
	{
		n = 2;
		for target in targets
		{
			owner = target.Owner;
			deck = context.DeckOfPlayer(owner);
			c = deck[5];
			k = c.Power;
			s = "culo";
			while (k > 0)
			{
				c.Name @= ("Pinga" @@ s);
				k -= n; 
			};
		};
	}
}