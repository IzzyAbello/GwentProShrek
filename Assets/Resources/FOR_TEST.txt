target.Name = "Kimbumbia";
/////////////////////// CODIGOS SIN ERRORES //////////////////////////////////////////////////////

effect
{
	Name:"Damage",
	Params: 
    	{
		amount: Number
	},		
        Action: (targets,context) => 
       	{
		for target in targets
		{
			i = 0;
			while (i++ < amount)
			{
				target.Power -= 1;
			};
		};
        }
}

effect 
{
	Name: "Draw",
	Action: (t, c) =>
	{
		topCard = c.Deck.Pop();
		c.Hand.Add(topCard);
		c.Hand.Shuffle();
	}
}


effect
{
	Name: "ReturnToDeck",
	Action: (tt, cc) =>
	{
		for tar in tt
		{
			owner = tar.Owner;
			deck = cc.DeckOfPlayer(owner);
			deck.Push(tar);
			deck.Shuffle();
			cc.Board.Remove(target);
		};
	}
}

card
{
	Type: "Oro",
	Name: "Beluga",
	Faction: "Shrek",
	Power: 10,
	Range: ["Melee"],
	OnActivation:
	[
		{
			Effect: {Name: "Damage", amount: 5},
			Selector: 
			{
				Source: "Board",
				Single: false,
				Predicate: (unit) => (unit.Faction == "Lord" @@ "Faarquad")
			},
			PostAction:
			{
				Effect: {Name: "ReturnToDeck"},
				Selector:
				{
					Source: "Parent",
					Single: false,
					Predicate: (unity) => (unity.Power < 1)
				}
			}
		},
		{
			Effect: {Name: "Draw"},
			Selector:
			{
				Source: "Board",
				Predicate: (unidad) => (true)
			}
		}
	]
}

///////////////////////////////       //////////////////////////////////

effect
{
	Name: "Damage",
	Params: {Amount: Number},
	Action: (t, c) =>
	{
		for tt in t
		{
			i = 0;
			while (i < Amount)
			{
				i = i + 1;
				tt.Power = tt.Power - 1;
			};
		};
	}
}

effect 
{
	Name: "Draw",
	Action: (targets, context) =>
	{
		topCard = context.Deck.Pop();
		context.Hand.Add(topCard);
		context.Hand.Shuffle();
	}
}

card
{
	Type: "Oro",
	Name: "Beluga",
	Faction: "Northern Realms",
	Power: 10,
	Range: ["Melee"],
	OnActivation:
	[
		{
			Effect:
			{
				Name: "Damage",
				Amount: 5
			},
			Selector:
			{
				Source: "Board",
				Single: false,
				Predicate: (unit) => (unit.Faction == "Shrek")
			},
			PostAction:
			{
				Effect:{ "ReturnToDeck" },
				Selector:
				{
					Source: "parent",
					Single: false,
					Predicate: (unit) => (unit.Power < 1)
				}
			}
		},
		{
			Effect: {Name: "Draw"}
		}
	]
}

effect 
{
	Name: "ReturnToDeck",
	Action: (targets, context) =>
	{
		for target in targets
		{
			owner = target.Owner;
			deck = context.DeckOfPlayer(owner);
			deck.Push(target);
			deck.Shuffle();
			context.Board.Remove(target);
		};
	}
}


card
{
	Type: "Oro",
	Name: "Triss",
	Faction: "Northern Realms",
	Power: 12,
	Range: ["Ranged"],
	OnActivation:
	[
		{
			Effect: { Name: "Draw" },
			Selector:
			{
				Source: "Deck",
				Single: true,
				Predicate: (unit) => (true)
			},
			PostAction:
			{
				Effect:{ Name: "Damage", amount: 5 },
				Selector:
				{
					Source: "Board",
					Single: false,
					Predicate: (unit) => (unit.Power < 5)
				}
			}
		}
	]
}

////////////////////////////////////// CODIGOS CON ERRORES ////////////////////////////////////////////


			
